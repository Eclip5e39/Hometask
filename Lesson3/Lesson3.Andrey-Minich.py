# Домашка до вторника (берём уже то, что вы сделали к последнему уроку):
#
# 0. Обязательно к прочтению Дзен python.
# 1. Создать несколько функций на проверку введённых данных:
# - Проверка имени
# - Проверка возраста
# Функции должны возвращать строку с ошибкой. Если функции вернули ошибки, нужно вывести пользователю ошибки.
# 2. Улучшить проверку имени: в имени допускается только 1 пробел.
# 3. Сделать совет по получению или замене паспорта (эта задача больше не является со звездочкой) в отдельной функции, которая возвращает строку с советом или ничего не возвращает.
# 4. Создать функцию main, в которой будут вызовы всех остальных функций, ввод данных и прочее.
# 5. Создать цикл до тех пор, пока пользователь не введёт верные данные без ошибок.
# 6. Создать функцию, которая очищает введённые данные от лишних пробелов в начале и в конце строки.
# 7. Все функции должны иметь документацию (docstring) (вспоминаем второй урок) и аннотации.
#
#
# И по классике — ограничения:
# - Разрешается использовать только два раза print.
# - Нельзя использовать глобальные переменные.

def user_name(name: str) -> str:
    """
    Функция проверки имени на пустое значение, поиск лишних пробелов, также чтобы имя не было меньше 3-х символов
    :param name: Ввод данных строки (Имени)
    :return: Возвращает сообщение об ошибке
    """
    name = ' '.join(name.split())
    if not name:
        return 'Поле имени не должно быть пустым! '
    if len(name) < 3:
        return 'Имя не должно быть короче 3-х символов. '


def user_age(age: int) -> str:
    """
    Функция проверки возраста на пустое значение (Ввод корректного возраста),введенный возраст меньше 14.
    :param age: Ввод целочисленных данных
    :return: Возвращает сообщение об ошибке типа str.
    """
    if age == '':
        return 'Поле имени должно быть заполнено. '
    if age <= 0:
        return 'Возраст должен быть больше 0. '
    if age < 14:
        return 'Ваш возраст меньше 14. '


def passport_age(age: int) -> str:
    """
    Функция проверки для получения паспорта
    :param age: Введенные данные типа int(целочисленные значения)
    :return: Возвращает сообщение о получении паспорта типа str.
    """
    if 16 == age == 17:
        return 'Нужно не забыть получить первый паспорт. '
    if 25 == age == 26:
        return 'Нужно заменить паспорт. '
    if 45 == age == 46:
        return 'Нужно второй раз заменить паспорт. '


def main():
    """
    Функция для вызова других функций
    :return: Возвращает приветствие типа str.
    """
    name = ''
    age = 0
    validate_name: bool = False
    validate_age: bool = False

    while not validate_name or not validate_age:
        passport: str = ''
        if not validate_name:
            name: str = input('Введите ваше имя: ').capitalize()
            name = ' '.join(name.split())
            """
            Сначала формирует список слов через split(), а затем соединяются элементы
            списка одиночным пробелом через ' '.join.
            """
        if not validate_age:
            value_age: str = input('Введите ваш возраст: ')
            age = int(value_age) if value_age != '' else value_age
        name_error = user_name(name)
        age_error = user_age(age)
        if not name_error:
            validate_name = True
        else:
            passport += name_error
        if not age_error:
            validate_age = True
        else:
            passport += age_error
        if passport != '':
            print(passport)

    massage = passport_age(age)
    if not massage:
        massage = ''
    print(f'Привет, {name}. Ваш возраст {age}. ' + massage)


if __name__ == '__main__':
    main()
